
import { notificationService } from '../notification-service';
import { emotionalDataService } from '../emotional-data-service';
import { ActionHandler } from './action-handler.interface';
import { actionHandlerRegistry } from './action-handler-registry';

/**
 * Handler for emotion detections that trigger notifications
 */
export class EmotionDetectedHandler implements ActionHandler {
  actionType = 'emotion_detected';

  execute(userId: string, payload: any): void {
    console.log(`Processing emotion detection for user ${userId}: ${JSON.stringify(payload)}`);
    
    // Notify the user about the detected emotion
    notificationService.addNotification(userId, {
        title: "Émotion détectée",
        message: `Nous avons détecté que vous ressentez ${payload.emotion}.`,
        type: 'info',
        // id was removed as it will be generated by the service
    });
  }
}

/**
 * Handler for stress level notifications
 */
export class StressLevelHandler implements ActionHandler {
  actionType = 'stress_level';

  execute(userId: string, payload: any): void {
    console.log(`Processing stress level for user ${userId}: ${payload.level}`);
    
    // If stress level is high, send a notification
    if (payload.level > 7) {
      notificationService.addNotification(userId, {
        title: "Niveau de stress élevé",
        message: "Nous avons détecté un niveau de stress élevé. Prenez quelques instants pour respirer profondément.",
        type: 'warning',
        // id was removed as it will be generated by the service
      });
    }
  }
}

/**
 * Handler for emotional trend changes
 */
export class EmotionalTrendHandler implements ActionHandler {
  actionType = 'emotional_trend';

  execute(userId: string, payload: any): void {
    console.log(`Processing emotional trend for user ${userId}`);
    
    // Update user's emotional data
    emotionalDataService.updateUserEmotionalData(userId, payload);
    
    // Check if there's a negative trend
    if (emotionalDataService.hasNegativeTrend(userId)) {
      notificationService.addNotification(userId, {
        title: "Tendance émotionnelle",
        message: "Nous avons remarqué un changement dans votre état émotionnel. Souhaitez-vous en parler avec votre coach?",
        type: 'info',
        // id was removed as it will be generated by the service
      });
    }
  }
}

/**
 * Handler for emotion recognition feedback
 */
export class EmotionFeedbackHandler implements ActionHandler {
  actionType = 'emotion_feedback';

  execute(userId: string, payload: any): void {
    console.log(`Processing emotion feedback for user ${userId}`);
    
    // Update the emotional data with user feedback
    emotionalDataService.updateUserEmotionalData(userId, {
      feedback: payload.feedback,
      timestamp: new Date()
    });
  }
}

// Register all emotion handlers
actionHandlerRegistry.register(new EmotionDetectedHandler());
actionHandlerRegistry.register(new StressLevelHandler());
actionHandlerRegistry.register(new EmotionalTrendHandler());
actionHandlerRegistry.register(new EmotionFeedbackHandler());

