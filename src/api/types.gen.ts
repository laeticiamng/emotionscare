/**
 * Ce fichier est généré via scripts/gen-openapi-types.mjs
 * Ne pas modifier manuellement.
 */

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

interface AssessPaths {
    "/assess/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Démarrer une évaluation
         * @description Crée une session d’évaluation en vérifiant l’opt-in et les instruments autorisés.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Identifiant fonctionnel de l’outil (ex. who5, stai6, moodscan). */
                        instrument: string;
                        /** @description Code langue conforme BCP 47. */
                        locale?: string;
                        /** @description Informations textuelles facultatives (jamais de PII). */
                        context?: string;
                    };
                };
            };
            responses: {
                /** @description Session créée. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            sessionId: string;
                            /** @description Message d’accueil textuel. */
                            intro: string;
                            /** @description Liste séquentielle des questions. */
                            questions: {
                                id: string;
                                prompt: string;
                                help?: string | null;
                                choices: string[];
                            }[];
                        };
                    };
                };
                /** @description Authentification requise. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Opt-in absent ou instrument interdit. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Limite de fréquence atteinte. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/assess/submit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Enregistrer une réponse */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        sessionId: string;
                        answers: {
                            questionId: string;
                            /** @description Réponse textuelle ou identifiant de choix. */
                            value: string;
                        }[];
                        /** @description Texte facultatif pour marquer la fin de session. */
                        completion?: string | null;
                    };
                };
            };
            responses: {
                /** @description Étape suivante. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            status: "pending" | "complete";
                            nextQuestionId?: string | null;
                            /** @description Guidance textuelle pour l’utilisatrice. */
                            message: string;
                        };
                    };
                };
                /** @description Authentification requise. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Session introuvable. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Session clôturée. */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/assess/aggregate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Obtenir un résumé personnalisé
         * @description Génère un retour qualitatif pour la session sans aucune donnée chiffrée.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        sessionId: string;
                    };
                };
            };
            responses: {
                /** @description Synthèse textuelle prête à afficher. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Phrase clé rassurante. */
                            headline: string;
                            summary: string;
                            suggestions: string[];
                            /** @description Tag interne (ex. mellow, uplift, grounding). */
                            tone?: string;
                        };
                    };
                };
                /** @description Authentification requise. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Session introuvable ou expirée. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Opt-in manquant. */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
type AssessWebhooks = Record<string, never>;
interface AssessComponents {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
type AssessDefs = Record<string, never>;
type AssessOperations = Record<string, never>;

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

interface B2BPaths {
    "/b2b/teams/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Lister les cercles accompagnés
         * @description Retourne des équipes agrégées avec une indication qualitative de taille.
         */
        get: {
            parameters: {
                query: {
                    organisationId: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Liste textuelle des équipes. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            teams: {
                                /** Format: uuid */
                                id: string;
                                name: string;
                                /** @description Libellé qualitatif (ex. petite cohorte, grande division). */
                                sizeLabel: string;
                                /** @description Résumé textuel du dernier accompagnement. */
                                lastTouchpoint: string;
                            }[];
                        };
                    };
                };
                /** @description Jeton manquant ou invalide. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Accès refusé pour l’organisation. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/b2b/reports/summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Générer un rapport narratif
         * @description Produit une synthèse textuelle par équipe et thématique, sans métrique numérique.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        organisationId: string;
                        /** @description Thématique du rapport (ex. présence, sérénité collective). */
                        focus?: string;
                        teams?: string[];
                    };
                };
            };
            responses: {
                /** @description Rapport textuel prêt pour diffusion. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: date-time */
                            generatedAt: string;
                            headline: string;
                            narratives: {
                                /** Format: uuid */
                                teamId: string;
                                tone: string;
                                story: string;
                            }[];
                        };
                    };
                };
                /** @description Jeton manquant ou invalide. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Organisation non autorisée. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/b2b/audit/trail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Consulter les actions sensibles
         * @description Fournit une trace textuelle (redacted) des actions opérées par l’organisation.
         */
        get: {
            parameters: {
                query: {
                    organisationId: string;
                    since?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Flux d’événements anonymisés. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            events: {
                                /** Format: date-time */
                                occurredAt: string;
                                /** @description Hachage non réversible. */
                                actorHash: string;
                                description: string;
                            }[];
                        };
                    };
                };
                /** @description Jeton manquant ou invalide. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Organisation non autorisée. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/b2b/exports/journal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Préparer un export textuel
         * @description Génère un lien sécurisé contenant des extraits narratifs anonymes. Aucune PII et aucune métrique chiffrée.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        organisationId: string;
                        /** @description Durée de validité du lien signé. */
                        expiresInMinutes?: number;
                    };
                };
            };
            responses: {
                /** @description Lien généré. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uri */
                            downloadUrl: string;
                            /** @description Instructions d’usage et restrictions RLS. */
                            guidance: string;
                        };
                    };
                };
                /** @description Jeton manquant ou invalide. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Organisation non autorisée. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Trop de requêtes. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
type B2BWebhooks = Record<string, never>;
interface B2BComponents {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
type B2BDefs = Record<string, never>;
type B2BOperations = Record<string, never>;
export interface paths extends AssessPaths, B2BPaths {}
export type webhooks = AssessWebhooks & B2BWebhooks;
export interface components extends AssessComponents, B2BComponents {}
export type $defs = AssessDefs & B2BDefs;
export type operations = AssessOperations & B2BOperations;
