name: CI

on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.versions.outputs.node }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - id: versions
        run: echo "node=20" >> "$GITHUB_OUTPUT"

  sentry-guard:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ensure web Sentry client does not use Next.js SDK or env vars
        run: |
          if rg --files-with-matches '@sentry/nextjs' src/lib/obs; then
            echo "Do not use @sentry/nextjs in web Sentry code." >&2
            exit 1
          fi
          if rg --files-with-matches 'process\\.env\\.NEXT_' src/lib/obs; then
            echo "Do not use process.env.NEXT_* in web Sentry code." >&2
            exit 1
          fi

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run check:env
      - run: pnpm lint
      - run: pnpm lint:imports

  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm typecheck

  unit:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  build:
    needs: [lint, sentry-guard, typecheck, unit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build

  scanners:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run scan:no-clinical-terms
      - run: pnpm run scan:no-raw-numbers

  e2e-smoke:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - name: Start preview server
        run: |
          pnpm preview -- --port 4173 --host 0.0.0.0 &
          pnpm dlx wait-on http://127.0.0.1:4173
      - name: Run smoke Playwright tests
        env:
          PW_BASE_URL: http://127.0.0.1:4173
        run: pnpm exec playwright test --config=playwright.smoke.config.ts
