
import { useState } from 'react';
import { Challenge } from '@/types/gamification';

interface OpenAIHookResult {
  isLoading: boolean;
  error: string | null;
  generateResponse: (prompt: string) => Promise<string>;
  generateImage: (prompt: string) => Promise<string>;
  challenges: Challenge[];
}

export function useOpenAI(): OpenAIHookResult {
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  
  // Mock function to generate text responses
  const generateResponse = async (prompt: string): Promise<string> => {
    setIsLoading(true);
    setError(null);
    
    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Mock response based on prompt content
      if (prompt.toLowerCase().includes('emotion')) {
        return "Emotions are complex feelings that involve physical and mental changes influencing how we think and behave.";
      } else if (prompt.toLowerCase().includes('stress')) {
        return "Stress management techniques include deep breathing, meditation, physical activity, and maintaining social connections.";
      } else {
        return "I'm here to help you understand your emotions and provide guidance on emotional well-being.";
      }
    } catch (err) {
      const errorMsg = err instanceof Error ? err.message : 'Failed to generate response';
      setError(errorMsg);
      throw new Error(errorMsg);
    } finally {
      setIsLoading(false);
    }
  };
  
  // Mock function to generate image URLs
  const generateImage = async (prompt: string): Promise<string> => {
    setIsLoading(true);
    setError(null);
    
    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // Return a placeholder image URL
      return 'https://via.placeholder.com/512x512?text=AI+Generated+Image';
    } catch (err) {
      const errorMsg = err instanceof Error ? err.message : 'Failed to generate image';
      setError(errorMsg);
      throw new Error(errorMsg);
    } finally {
      setIsLoading(false);
    }
  };
  
  // Mock challenges that might be generated by AI
  const mockChallenges: Challenge[] = [
    {
      id: 'ai-1',
      name: 'Gratitude journaling',
      title: 'Gratitude journaling',
      description: 'Write down 3 things you are grateful for each day for a week',
      points: 50,
      status: 'active',
      type: 'personal'
    },
    {
      id: 'ai-2',
      name: 'Mindfulness meditation',
      title: 'Mindfulness meditation',
      description: 'Practice 5 minutes of mindfulness meditation daily',
      points: 75,
      status: 'available',
      type: 'wellbeing'
    }
  ];
  
  return {
    isLoading,
    error,
    generateResponse,
    generateImage,
    challenges: mockChallenges
  };
}
