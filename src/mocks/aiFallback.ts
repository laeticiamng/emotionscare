// Fallbacks pour les analyses d'√©motions quand l'API ne r√©pond pas

import type { Emotion, EmotionResult } from '@/types';

// Types d'√©motions disponibles
export type EmotionType = 'happy' | 'sad' | 'calm' | 'worried' | 'excited' | 'frustrated' | 'neutral' | 'unknown';

/**
 * Fournit un r√©sultat d'analyse d'√©motion pour le cas o√π l'API ne r√©pond pas
 */
export const getFallbackEmotionAnalysis = (text?: string, emojis?: string): EmotionResult => {
  // Si nous avons du texte, essayons de faire une analyse basique
  if (text) {
    // Mots-cl√©s positifs
    const positiveWords = ['heureux', 'content', 'bien', 'super', 'g√©nial', 'sourire', 'positive', 'agr√©able', 'joie'];
    // Mots-cl√©s n√©gatifs
    const negativeWords = ['triste', 'mal', 'fatigu√©', 'stress', 'anxieux', 'inquiet', 'd√©prim√©', 'probl√®me', 'col√®re'];
    // Mots-cl√©s calmes
    const calmWords = ['calme', 'paisible', 'serein', 'tranquille', 'zen', 'relaxant', 'repos', 'd√©tendu'];
    // Mots-cl√©s excitation
    const excitedWords = ['excit√©', 'enthousiaste', 'impatient', '√©nergique', 'motiv√©', 'passionnant', 'adr√©naline'];
    
    const textLower = text.toLowerCase();
    
    // Compter les occurrences de mots-cl√©s dans chaque cat√©gorie
    let positiveCount = positiveWords.filter(word => textLower.includes(word)).length;
    let negativeCount = negativeWords.filter(word => textLower.includes(word)).length;
    let calmCount = calmWords.filter(word => textLower.includes(word)).length;
    let excitedCount = excitedWords.filter(word => textLower.includes(word)).length;
    
    // Si des √©mojis sont pr√©sents, ajouter du poids suppl√©mentaire
    if (emojis) {
      if (/üòä|üòÅ|üòÑ|üôÇ|üëç|‚ù§Ô∏è|üòÉ|ü§ó/.test(emojis)) positiveCount += 2;
      if (/üò¢|üò≠|üòî|üòû|üò•|üò©|‚òπÔ∏è|üôÅ/.test(emojis)) negativeCount += 2;
      if (/üòå|üò¥|üßò|üåà|üåä|üå±/.test(emojis)) calmCount += 2;
      if (/üéâ|üéä|üöÄ|‚ú®|üî•|üíØ|‚ö°/.test(emojis)) excitedCount += 2;
    }
    
    // D√©terminer l'√©motion dominante
    const max = Math.max(positiveCount, negativeCount, calmCount, excitedCount);
    
    if (max === 0) {
      return {
        emotion: 'neutral',
        confidence: 0.6,
        transcript: text
      };
    }
    
    if (max === positiveCount) {
      return {
        emotion: excitedCount > positiveCount / 2 ? 'excited' : 'happy',
        confidence: Math.min(0.7, 0.5 + (positiveCount / 10)),
        transcript: text
      };
    }
    
    if (max === negativeCount) {
      return {
        emotion: calmCount > negativeCount / 2 ? 'worried' : 'frustrated',
        confidence: Math.min(0.7, 0.5 + (negativeCount / 10)),
        transcript: text
      };
    }
    
    if (max === calmCount) {
      return {
        emotion: 'calm',
        confidence: Math.min(0.7, 0.5 + (calmCount / 10)),
        transcript: text
      };
    }
    
    if (max === excitedCount) {
      return {
        emotion: 'excited',
        confidence: Math.min(0.7, 0.5 + (excitedCount / 10)),
        transcript: text
      };
    }
  }
  
  // Si nous avons juste des √©mojis
  if (emojis && !text) {
    if (/üòä|üòÅ|üòÑ|üôÇ|üëç|‚ù§Ô∏è|üòÉ|ü§ó/.test(emojis)) {
      return {
        emotion: 'happy',
        confidence: 0.65,
        transcript: emojis
      };
    }
    if (/üò¢|üò≠|üòî|üòû|üò•|üò©|‚òπÔ∏è|üôÅ/.test(emojis)) {
      return {
        emotion: 'sad',
        confidence: 0.65,
        transcript: emojis
      };
    }
    if (/üòå|üò¥|üßò|üåà|üåä|üå±/.test(emojis)) {
      return {
        emotion: 'calm',
        confidence: 0.65,
        transcript: emojis
      };
    }
    if (/üéâ|üéä|üöÄ|‚ú®|üî•|üíØ|‚ö°/.test(emojis)) {
      return {
        emotion: 'excited',
        confidence: 0.65,
        transcript: emojis
      };
    }
    if (/üò†|üò°|üò§|üëé|üí¢|üî•/.test(emojis)) {
      return {
        emotion: 'frustrated',
        confidence: 0.65,
        transcript: emojis
      };
    }
    if (/üòü|üò®|üò∞|üòß|üò¨|ü§î/.test(emojis)) {
      return {
        emotion: 'worried',
        confidence: 0.65,
        transcript: emojis
      };
    }
  }
  
  // Fallback par d√©faut si nous ne pouvons pas faire d'analyse
  return {
    emotion: 'neutral',
    confidence: 0.5,
    transcript: text || emojis || ''
  };
};

/**
 * G√©n√®re un objet Emotion compatible avec l'API pour un fallback
 */
export const createFallbackEmotion = (
  userId: string,
  text?: string,
  emojis?: string,
  audioUrl?: string
): Emotion => {
  const result = getFallbackEmotionAnalysis(text, emojis);
  const score = getScoreFromEmotion(result.emotion || 'neutral');
  
  return {
    id: `fallback-${Date.now()}`,
    user_id: userId,
    date: new Date().toISOString(),
    emotion: result.emotion,
    score,
    text,
    emojis,
    audio_url: audioUrl,
    source: 'fallback',
    confidence: result.confidence,
    is_confidential: true,
    ai_feedback: getFallbackFeedback(result.emotion || 'neutral')
  };
};

/**
 * Convertit une √©motion en score num√©rique
 */
const getScoreFromEmotion = (emotion: string): number => {
  switch (emotion) {
    case 'happy': return 80;
    case 'excited': return 85;
    case 'calm': return 75;
    case 'neutral': return 60;
    case 'worried': return 40;
    case 'frustrated': return 30;
    case 'sad': return 25;
    default: return 50;
  }
};

/**
 * G√©n√®re un feedback basique en fonction de l'√©motion d√©tect√©e
 */
const getFallbackFeedback = (emotion: string): string => {
  switch (emotion) {
    case 'happy':
      return "Je vois que vous √™tes dans un √©tat d'esprit positif aujourd'hui. C'est formidable ! Profitez de cette √©nergie pour accomplir vos objectifs.";
    case 'excited':
      return "Votre enthousiasme est palpable ! Canalisez cette √©nergie positive dans vos projets et n'oubliez pas de la partager avec votre entourage.";
    case 'calm':
      return "Vous semblez serein et √©quilibr√© aujourd'hui. C'est un excellent √©tat d'esprit pour prendre des d√©cisions r√©fl√©chies et vous concentrer sur l'essentiel.";
    case 'neutral':
      return "Votre humeur semble neutre aujourd'hui. C'est un bon moment pour prendre du recul et r√©fl√©chir √† ce qui pourrait vous apporter plus de satisfaction.";
    case 'worried':
      return "Je per√ßois une certaine inqui√©tude. Avez-vous essay√© quelques exercices de respiration ? Parfois, prendre un moment pour soi peut aider √† clarifier les pens√©es.";
    case 'frustrated':
      return "La frustration que vous ressentez est compr√©hensible. Essayez de vous accorder une pause et peut-√™tre de recadrer la situation sous un angle diff√©rent.";
    case 'sad':
      return "Il est normal de traverser des moments difficiles. N'h√©sitez pas √† partager vos sentiments avec un proche ou √† pratiquer une activit√© qui vous fait du bien.";
    default:
      return "Merci pour votre partage d'aujourd'hui. Comment puis-je vous aider √† am√©liorer votre journ√©e ?";
  }
};
