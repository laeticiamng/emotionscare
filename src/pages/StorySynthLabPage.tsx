
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Textarea } from '@/components/ui/textarea';
import { BookOpen, Sparkles, Wand2, RefreshCw, Download, Share, FileText, Clock, TrendingUp, Users } from 'lucide-react';
import { toast } from 'sonner';
import PageLayout from '@/components/common/PageLayout';
import FeatureCard from '@/components/common/FeatureCard';

const StorySynthLabPage: React.FC = () => {
  const [userInput, setUserInput] = useState('');
  const [generatedStory, setGeneratedStory] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedGenre, setSelectedGenre] = useState('fantasy');
  const [storyLength, setStoryLength] = useState('short');

  const genres = [
    { id: 'fantasy', name: 'Fantasy', emoji: 'üßô‚Äç‚ôÇÔ∏è', description: 'Mondes magiques et cr√©atures fantastiques' },
    { id: 'scifi', name: 'Science-Fiction', emoji: 'üöÄ', description: 'Futur, technologie et exploration spatiale' },
    { id: 'romance', name: 'Romance', emoji: 'üíï', description: 'Histoires d\'amour et relations humaines' },
    { id: 'mystery', name: 'Myst√®re', emoji: 'üîç', description: 'Enigmes, suspense et investigations' },
    { id: 'adventure', name: 'Aventure', emoji: 'üó∫Ô∏è', description: 'Voyages √©piques et d√©couvertes' },
    { id: 'wellness', name: 'Bien-√™tre', emoji: 'üå∏', description: 'Histoires apaisantes et inspirantes' }
  ];

  const storyLengths = [
    { id: 'micro', name: 'Micro-histoire', duration: '1-2 min', words: '100-200 mots' },
    { id: 'short', name: 'Histoire courte', duration: '3-5 min', words: '300-500 mots' },
    { id: 'medium', name: 'R√©cit moyen', duration: '8-10 min', words: '800-1000 mots' }
  ];

  const generateStory = async () => {
    if (!userInput.trim()) {
      toast.error('Veuillez entrer une id√©e ou un th√®me pour votre histoire');
      return;
    }

    setIsGenerating(true);
    
    // Simulation de g√©n√©ration d'histoire IA
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const sampleStory = `Dans un monde o√π les √©motions prenaient forme de lumi√®re color√©e, Luna d√©couvrit qu'elle pouvait tisser ces rayons en histoires vivantes.

Chaque matin, elle se rendait au Laboratoire des R√©cits, un lieu magique o√π les pens√©es se transformaient en aventures extraordinaires. Aujourd'hui, inspir√©e par "${userInput}", elle commen√ßa √† tisser une histoire unique.

Les couleurs dansaient autour d'elle : le bleu profond de la m√©lancolie, l'or √©tincelant de la joie, le rouge passionn√© de l'amour. Ses mains expertes guidaient ces teintes √©motionnelles, cr√©ant un r√©cit qui toucherait le c≈ìur de tous ceux qui l'entendraient.

L'histoire qu'elle cr√©a parlait de transformation, de d√©couverte de soi et de la beaut√© cach√©e dans chaque √©motion humaine. Car Luna savait que les meilleures histoires naissent du c≈ìur et parlent √† l'√¢me.

Quand elle termina son ≈ìuvre, les couleurs se cristallis√®rent en un livre lumineux, pr√™t √† apporter inspiration et r√©confort √† celui qui le lirait.`;

    setGeneratedStory(sampleStory);
    setIsGenerating(false);
    toast.success('Histoire g√©n√©r√©e avec succ√®s ! ‚ú®');
  };

  const saveStory = () => {
    const blob = new Blob([generatedStory], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'mon-histoire-synthlab.txt';
    a.click();
    toast.success('Histoire sauvegard√©e !');
  };

  const shareStory = () => {
    if (navigator.share) {
      navigator.share({
        title: 'Mon histoire du Story Synth Lab',
        text: generatedStory,
      });
    } else {
      navigator.clipboard.writeText(generatedStory);
      toast.success('Histoire copi√©e dans le presse-papiers !');
    }
  };

  return (
    <PageLayout
      header={{
        title: 'Story Synth Lab',
        subtitle: 'Laboratoire cr√©atif d\'intelligence artificielle',
        description: 'Transformez vos id√©es en histoires captivantes gr√¢ce √† notre IA cr√©ative. Explorez diff√©rents genres et styles pour cr√©er des r√©cits uniques et personnalis√©s.',
        icon: BookOpen,
        gradient: 'from-violet-500/20 to-pink-500/5',
        badge: 'IA Cr√©ative',
        stats: [
          {
            label: 'Histoires cr√©√©es',
            value: '156',
            icon: FileText,
            color: 'text-violet-500'
          },
          {
            label: 'Genres disponibles',
            value: '6',
            icon: Sparkles,
            color: 'text-purple-500'
          },
          {
            label: 'Temps moyen',
            value: '3min',
            icon: Clock,
            color: 'text-blue-500'
          },
          {
            label: 'Cr√©ativit√©',
            value: '+85%',
            icon: TrendingUp,
            color: 'text-green-500'
          }
        ],
        actions: [
          {
            label: 'Nouvelle Histoire',
            onClick: () => {
              setUserInput('');
              setGeneratedStory('');
            },
            variant: 'default',
            icon: Wand2
          },
          {
            label: 'Mes Cr√©ations',
            onClick: () => console.log('My stories'),
            variant: 'outline',
            icon: BookOpen
          }
        ]
      }}
      tips={{
        title: 'Conseils pour de meilleures histoires',
        items: [
          {
            title: 'Soyez sp√©cifique',
            content: 'Plus votre description est d√©taill√©e, plus l\'histoire sera riche et personnalis√©e',
            icon: Wand2
          },
          {
            title: 'Exp√©rimentez',
            content: 'Testez diff√©rents genres et longueurs pour d√©couvrir de nouveaux styles',
            icon: Sparkles
          },
          {
            title: 'Sauvegardez',
            content: 'N\'oubliez pas de t√©l√©charger vos histoires favorites pour les relire plus tard',
            icon: Download
          }
        ],
        cta: {
          label: 'Guide de cr√©ation d\'histoires',
          onClick: () => console.log('Story creation guide')
        }
      }}
    >
      <div className="grid lg:grid-cols-2 gap-8">
        {/* Panneau de cr√©ation */}
        <Card className="h-fit">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Sparkles className="w-5 h-5 text-violet-600" />
              Cr√©ateur d'Histoire
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-foreground mb-2">
                Votre id√©e ou th√®me
              </label>
              <Textarea
                placeholder="D√©crivez votre id√©e d'histoire, un personnage, une situation, ou laissez libre cours √† votre imagination..."
                value={userInput}
                onChange={(e) => setUserInput(e.target.value)}
                rows={4}
                className="resize-none"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-foreground mb-3">
                Genre d'histoire
              </label>
              <div className="grid grid-cols-2 gap-2">
                {genres.map((genre) => (
                  <Button
                    key={genre.id}
                    variant={selectedGenre === genre.id ? 'default' : 'outline'}
                    className="h-auto p-3 flex flex-col items-center gap-1"
                    onClick={() => setSelectedGenre(genre.id)}
                  >
                    <span className="text-lg">{genre.emoji}</span>
                    <span className="text-xs">{genre.name}</span>
                  </Button>
                ))}
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-foreground mb-3">
                Longueur d'histoire
              </label>
              <div className="space-y-2">
                {storyLengths.map((length) => (
                  <Button
                    key={length.id}
                    variant={storyLength === length.id ? 'default' : 'outline'}
                    className="w-full justify-start"
                    onClick={() => setStoryLength(length.id)}
                  >
                    <div className="text-left">
                      <div className="font-medium">{length.name}</div>
                      <div className="text-xs opacity-75">{length.duration} ‚Ä¢ {length.words}</div>
                    </div>
                  </Button>
                ))}
              </div>
            </div>

            <Button
              onClick={generateStory}
              disabled={isGenerating || !userInput.trim()}
              className="w-full"
              size="lg"
            >
              {isGenerating ? (
                <>
                  <RefreshCw className="w-4 h-4 mr-2 animate-spin" />
                  G√©n√©ration en cours...
                </>
              ) : (
                <>
                  <Wand2 className="w-4 h-4 mr-2" />
                  G√©n√©rer mon Histoire
                </>
              )}
            </Button>
          </CardContent>
        </Card>

        {/* Panneau de r√©sultat */}
        <Card className="h-fit min-h-[500px]">
          <CardHeader>
            <div className="flex items-center justify-between">
              <CardTitle className="flex items-center gap-2">
                <BookOpen className="w-5 h-5 text-primary" />
                Votre Histoire
              </CardTitle>
              {generatedStory && (
                <div className="flex gap-2">
                  <Button
                    onClick={saveStory}
                    variant="outline"
                    size="sm"
                    className="border-green-500 text-green-600 hover:bg-green-50"
                  >
                    <Download className="w-4 h-4" />
                  </Button>
                  <Button
                    onClick={shareStory}
                    variant="outline"
                    size="sm"
                    className="border-blue-500 text-blue-600 hover:bg-blue-50"
                  >
                    <Share className="w-4 h-4" />
                  </Button>
                </div>
              )}
            </div>
          </CardHeader>
          <CardContent>
            {isGenerating ? (
              <div className="flex items-center justify-center h-64">
                <div className="text-center">
                  <motion.div
                    animate={{ rotate: 360 }}
                    transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                    className="w-12 h-12 border-4 border-primary/20 border-t-primary rounded-full mx-auto mb-4"
                  />
                  <p className="text-muted-foreground">Cr√©ation de votre histoire magique...</p>
                </div>
              </div>
            ) : generatedStory ? (
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="prose prose-violet max-w-none"
              >
                <div className="bg-muted/50 p-6 rounded-lg border">
                  <div className="whitespace-pre-wrap text-foreground leading-relaxed">
                    {generatedStory}
                  </div>
                </div>
              </motion.div>
            ) : (
              <div className="flex items-center justify-center h-64 text-muted-foreground">
                <div className="text-center">
                  <BookOpen className="w-16 h-16 mx-auto mb-4 opacity-50" />
                  <p>Votre histoire appara√Ætra ici une fois g√©n√©r√©e</p>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {/* Features */}
      <div className="mt-12 grid md:grid-cols-4 gap-4">
        {[
          { icon: <Wand2 className="w-6 h-6" />, title: 'IA Cr√©ative', color: 'from-violet-500 to-purple-500' },
          { icon: <BookOpen className="w-6 h-6" />, title: 'Histoires Uniques', color: 'from-purple-500 to-pink-500' },
          { icon: <Sparkles className="w-6 h-6" />, title: 'Inspiration Infinie', color: 'from-pink-500 to-rose-500' },
          { icon: <Share className="w-6 h-6" />, title: 'Partage Facile', color: 'from-blue-500 to-cyan-500' }
        ].map((feature, index) => (
          <FeatureCard
            key={index}
            title={feature.title}
            description=""
            icon={feature.icon}
            gradient={feature.color}
            className="text-center"
          />
        ))}
      </div>
    </PageLayout>
  );
};

export default StorySynthLabPage;
