
import { test, expect } from '@playwright/test';

test.describe('Correction erreur React #426 - Route /b2b', () => {
  test('la route /b2b ne g√©n√®re plus d\'erreur React', async ({ page }) => {
    console.log('üîç Test de correction erreur React #426 sur /b2b');
    
    // √âcouter les erreurs JavaScript
    const jsErrors: string[] = [];
    page.on('pageerror', (error) => {
      jsErrors.push(error.message);
      console.log('‚ùå Erreur JS d√©tect√©e:', error.message);
    });

    // √âcouter les erreurs de console
    const consoleErrors: string[] = [];
    page.on('console', (msg) => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
        console.log('‚ùå Erreur console:', msg.text());
      }
    });

    // Naviguer vers /b2b
    await page.goto('/b2b');
    
    // Attendre que la page soit compl√®tement charg√©e
    await page.waitForLoadState('networkidle');
    
    // V√©rifier qu'aucune erreur React #426 n'est pr√©sente
    const reactErrors = jsErrors.filter(error => 
      error.includes('Minified React error #426') || 
      error.includes('React error #426')
    );
    
    expect(reactErrors).toHaveLength(0);
    
    // V√©rifier que la redirection fonctionne correctement
    await expect(page).toHaveURL('/b2b/selection');
    
    // V√©rifier que la page se charge sans erreur
    await expect(page.locator('[data-testid="page-root"]')).toBeVisible({ timeout: 5000 });
    await expect(page.locator('h1')).toContainText('Espace Entreprise');
    
    // V√©rifier que les boutons fonctionnent
    await expect(page.locator('text=Acc√©der en tant que Collaborateur')).toBeVisible();
    await expect(page.locator('text=Acc√©der en tant qu\'Administrateur')).toBeVisible();
    
    console.log('‚úÖ Aucune erreur React #426 d√©tect√©e');
    console.log('‚úÖ Redirection /b2b ‚Üí /b2b/selection OK');
    console.log('‚úÖ Page se charge correctement');
    
    // Log final des erreurs pour debug
    if (jsErrors.length > 0) {
      console.log('‚ö†Ô∏è Autres erreurs JS d√©tect√©es:', jsErrors);
    }
    if (consoleErrors.length > 0) {
      console.log('‚ö†Ô∏è Autres erreurs console d√©tect√©es:', consoleErrors);
    }
  });

  test('navigation depuis /b2b vers les pages de connexion fonctionne', async ({ page }) => {
    await page.goto('/b2b');
    await expect(page).toHaveURL('/b2b/selection');
    
    // Test navigation vers login collaborateur
    await page.click('text=Acc√©der en tant que Collaborateur');
    await expect(page).toHaveURL('/b2b/user/login');
    
    // Retour √† la s√©lection
    await page.goto('/b2b/selection');
    
    // Test navigation vers login admin
    await page.click('text=Acc√©der en tant qu\'Administrateur');
    await expect(page).toHaveURL('/b2b/admin/login');
    
    console.log('‚úÖ Navigation entre les pages B2B fonctionne');
  });
});
