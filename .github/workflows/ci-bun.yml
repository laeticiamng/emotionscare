
name: CI with Bun

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "20"
  BUN_VERSION: "1.2"

jobs:
  audit:
    runs-on: ubuntu-22.04
    outputs:
      features-status: ${{ steps.audit.outputs.status }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run project audit
        id: audit
        run: |
          bun run scripts/audit-project.js > audit-report.txt
          echo "status=completed" >> $GITHUB_OUTPUT
      
      - name: Upload audit report
        uses: actions/upload-artifact@v3
        with:
          name: audit-report
          path: audit-report.txt

  frontend:
    runs-on: ubuntu-22.04
    needs: audit
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Type check
        run: bun run tsc --noEmit
      
      - name: Lint
        run: bun run lint
      
      - name: Test with coverage
        run: bun test --coverage
      
      - name: Build
        run: bun run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  lighthouse:
    runs-on: ubuntu-22.04
    needs: frontend
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      
      - name: Install Lighthouse CI
        run: bun add -g @lhci/cli
      
      - name: Run Lighthouse CI
        run: |
          bun run preview &
          sleep 10
          lhci autorun --config lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  e2e:
    runs-on: ubuntu-22.04
    needs: frontend
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Install Cypress
        run: bun add -d cypress
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      
      - name: Run E2E tests
        run: |
          bun run preview &
          bunx cypress run
        env:
          CYPRESS_BASE_URL: http://localhost:4173

  deploy:
    runs-on: ubuntu-22.04
    needs: [audit, frontend, lighthouse, e2e]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      
      - name: Deploy to production
        run: |
          echo "ðŸš€ DÃ©ploiement en production"
          # Ajouter ici les commandes de dÃ©ploiement
