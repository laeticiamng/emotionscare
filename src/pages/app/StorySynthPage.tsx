import React, { useState, useRef, useEffect } from 'react';
import { Play, Pause, RotateCcw, Volume2, VolumeX, BookOpen, Sparkles } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Switch } from '@/components/ui/switch';
import { toast } from 'sonner';

interface Story {
  id: string;
  title: string;
  content: string;
  theme: string;
  duration: number;
  audioUrl?: string;
}

const StorySynthPage = () => {
  const [currentStory, setCurrentStory] = useState<Story | null>(null);
  const [selectedTheme, setSelectedTheme] = useState('forest');
  const [isGenerating, setIsGenerating] = useState(false);
  const [isPlaying, setIsPlaying] = useState(false);
  const [showSubtitles, setShowSubtitles] = useState(true);
  const [currentSentence, setCurrentSentence] = useState(0);
  const [isOffline, setIsOffline] = useState(false);
  const audioRef = useRef<HTMLAudioElement>(null);

  const themes = {
    forest: {
      label: 'For√™t Enchant√©e',
      description: 'Promenades paisibles sous les arbres',
      icon: 'üå≤',
      color: 'from-green-500 to-emerald-500'
    },
    ocean: {
      label: 'Oc√©an Infini',
      description: 'Vagues douces et horizons apaisants',
      icon: 'üåä',
      color: 'from-blue-500 to-cyan-500'
    },
    sky: {
      label: 'Ciel √âtoil√©',
      description: 'Contemplation nocturne et s√©r√©nit√©',
      icon: '‚≠ê',
      color: 'from-purple-500 to-indigo-500'
    },
    garden: {
      label: 'Jardin Secret',
      description: 'D√©couverte d\'un havre de paix',
      icon: 'üå∏',
      color: 'from-pink-500 to-rose-500'
    }
  };

  // Histoires pr√©-g√©n√©r√©es par th√®me
  const sampleStories: Record<string, Story> = {
    forest: {
      id: 'forest-1',
      title: 'La Clairi√®re Dor√©e',
      content: 'Vous marchez sur un sentier moussu, entour√© de grands ch√™nes centenaires. Les rayons du soleil filtrent doucement √† travers les feuilles, cr√©ant une danse de lumi√®re dor√©e sur le sol. Un ruisseau murmure tout pr√®s, accompagnant vos pas d\'une m√©lodie cristalline. Vous arrivez dans une clairi√®re circulaire o√π l\'herbe tendre vous invite √† vous reposer. Ici, le temps s\'arr√™te. Vous respirez profond√©ment l\'air pur et frais, sentant toute tension quitter votre corps. Les oiseaux chantent une berceuse apaisante tandis qu\'une brise l√©g√®re caresse votre visage.',
      theme: 'forest',
      duration: 180
    },
    ocean: {
      id: 'ocean-1', 
      title: 'La Plage √âternelle',
      content: 'Vos pieds nus touchent le sable fin et chaud d\'une plage d√©serte. Devant vous, l\'oc√©an s\'√©tend √† l\'infini, d\'un bleu profond et hypnotisant. Les vagues arrivent en rythme r√©gulier, se brisant doucement sur le rivage dans un murmure apaisant. Vous vous asseyez face √† l\'horizon, laissant le soleil r√©chauffer votre peau. Chaque vague qui se retire emporte avec elle vos soucis et vos tensions. Le sel dans l\'air purifie vos pens√©es. Vous fermez les yeux et vous laissez bercer par cette symphonie naturelle, sentant votre esprit s\'all√©ger comme une plume dans la brise marine.',
      theme: 'ocean',
      duration: 170
    },
    sky: {
      id: 'sky-1',
      title: 'La Nuit des √âtoiles',
      content: 'Allong√© sur une couverture douce, vous contemplez la vo√ªte c√©leste. Des milliers d\'√©toiles scintillent au-dessus de vous, formant des constellations myst√©rieuses. La lune, bienveillante, baigne le paysage d\'une lumi√®re argent√©e apaisante. L\'air nocturne est frais et pur, portant les parfums subtils de la nuit. Vous sentez la vastitude de l\'univers vous envelopper d\'un sentiment de paix profonde. Chaque √©toile semble vous murmurer que vous √™tes exactement l√† o√π vous devez √™tre. Le silence cosmique berce votre √¢me et vous vous sentez connect√© √† quelque chose de plus grand, de plus sage.',
      theme: 'sky',
      duration: 165
    },
    garden: {
      id: 'garden-1',
      title: 'Le Refuge Fleuri',
      content: 'Vous poussez une petite porte de bois et d√©couvrez un jardin secret, cach√© du monde ext√©rieur. Des roses parfum√©es grimpent le long des murs de pierre ancienne, m√™lant leurs couleurs tendres. Un petit bassin accueille des n√©nuphars qui flottent paisiblement. Le parfum des lavandes et du jasmin embaume l\'air ti√®de. Vous vous installez sur un banc de marbre sous une pergola couverte de glycines violettes. Ici, dans ce sanctuaire naturel, votre c≈ìur trouve son rythme apais√©. Les papillons dansent de fleur en fleur, vous rappelant la beaut√© simple des petits bonheurs. Chaque respiration vous remplit de s√©r√©nit√©.',
      theme: 'garden',
      duration: 175
    }
  };

  // V√©rifier le statut offline
  useEffect(() => {
    const updateOnlineStatus = () => setIsOffline(!navigator.onLine);
    updateOnlineStatus();
    
    window.addEventListener('online', updateOnlineStatus);
    window.addEventListener('offline', updateOnlineStatus);
    
    return () => {
      window.removeEventListener('online', updateOnlineStatus);
      window.removeEventListener('offline', updateOnlineStatus);
    };
  }, []);

  const generateStory = async () => {
    setIsGenerating(true);
    
    try {
      // Simulation de g√©n√©ration
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Utiliser l'histoire pr√©-g√©n√©r√©e pour le th√®me
      const story = sampleStories[selectedTheme];
      if (story) {
        setCurrentStory(story);
        setCurrentSentence(0);
        
        if (isOffline) {
          toast.success('Histoire g√©n√©r√©e (mode hors ligne)', {
            description: 'Lecture texte disponible'
          });
        } else {
          toast.success('Histoire g√©n√©r√©e avec succ√®s', {
            description: 'Pr√™te pour la lecture audio'
          });
        }
      }
    } catch (error) {
      toast.error('Erreur de g√©n√©ration', {
        description: 'Utilisez une histoire pr√©-charg√©e'
      });
    } finally {
      setIsGenerating(false);
    }
  };

  const playStory = async () => {
    if (!currentStory) return;

    if (isOffline) {
      // Mode texte uniquement
      setIsPlaying(true);
      startTextReading();
      toast.info('Mode hors ligne', {
        description: 'Lecture texte activ√©e avec sous-titres'
      });
    } else {
      // Simulation lecture audio
      setIsPlaying(true);
      startTextReading();
      toast.success('Lecture audio d√©marr√©e', {
        description: 'Installez-vous confortablement'
      });
    }
  };

  const pauseStory = () => {
    setIsPlaying(false);
  };

  const resetStory = () => {
    setIsPlaying(false);
    setCurrentSentence(0);
    setCurrentStory(null);
    toast.info('Histoire termin√©e', {
      description: 'Que voulez-vous faire maintenant ?'
    });
  };

  const startTextReading = () => {
    if (!currentStory) return;
    
    const sentences = currentStory.content.split('. ');
    let sentenceIndex = 0;
    
    const readNextSentence = () => {
      if (sentenceIndex < sentences.length && isPlaying) {
        setCurrentSentence(sentenceIndex);
        sentenceIndex++;
        
        setTimeout(readNextSentence, 3000); // 3 secondes par phrase
      } else if (sentenceIndex >= sentences.length) {
        setIsPlaying(false);
        toast.success('Histoire termin√©e !', {
          description: 'Prenez quelques instants pour savourer ce moment de calme'
        });
      }
    };
    
    readNextSentence();
  };

  const formatDuration = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const getCurrentText = () => {
    if (!currentStory) return '';
    const sentences = currentStory.content.split('. ');
    return sentences[currentSentence] || '';
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 p-4">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent mb-2">
            Story Synth
          </h1>
          <p className="text-slate-300">
            Histoires apaisantes g√©n√©r√©es pour votre d√©tente
          </p>
          {isOffline && (
            <p className="text-amber-400 text-sm mt-2">
              Mode hors ligne - Lecture texte disponible
            </p>
          )}
        </div>

        {currentStory ? (
          /* Lecteur d'histoire */
          <div className="space-y-6">
            <Card className="p-8 bg-slate-800/30 backdrop-blur-sm border-slate-700">
              <div className="text-center space-y-6">
                <div>
                  <div className="flex items-center justify-center gap-2 mb-4">
                    <span className="text-3xl">{themes[currentStory.theme as keyof typeof themes]?.icon}</span>
                    <h2 className="text-2xl font-bold text-white">{currentStory.title}</h2>
                  </div>
                  <p className="text-slate-400">
                    Dur√©e estim√©e : {formatDuration(currentStory.duration)}
                  </p>
                </div>

                {/* Zone de sous-titres */}
                {showSubtitles && isPlaying && (
                  <div className="bg-slate-900/50 p-6 rounded-lg border border-slate-600">
                    <p className="text-lg text-slate-200 leading-relaxed">
                      {getCurrentText()}
                    </p>
                  </div>
                )}

                {/* Texte complet si pas en lecture */}
                {(!isPlaying || !showSubtitles) && (
                  <div className="bg-slate-900/30 p-6 rounded-lg border border-slate-700 max-h-64 overflow-y-auto">
                    <p className="text-slate-300 leading-relaxed text-left">
                      {currentStory.content}
                    </p>
                  </div>
                )}

                {/* Contr√¥les */}
                <div className="flex justify-center gap-4">
                  {!isPlaying ? (
                    <Button onClick={playStory} size="lg" className="bg-blue-600 hover:bg-blue-700">
                      <Play className="w-5 h-5 mr-2" />
                      {isOffline ? 'Lire' : '√âcouter'}
                    </Button>
                  ) : (
                    <Button onClick={pauseStory} variant="secondary" size="lg">
                      <Pause className="w-5 h-5 mr-2" />
                      Pause
                    </Button>
                  )}
                  
                  <Button onClick={resetStory} variant="outline" size="lg">
                    <RotateCcw className="w-5 h-5 mr-2" />
                    Nouvelle histoire
                  </Button>
                </div>
              </div>
            </Card>

            {/* Options */}
            <Card className="p-6 bg-slate-800/30 backdrop-blur-sm border-slate-700">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  {showSubtitles ? <Volume2 className="w-5 h-5 text-blue-400" /> : <VolumeX className="w-5 h-5 text-slate-500" />}
                  <label className="text-white font-medium">Sous-titres</label>
                </div>
                <Switch 
                  checked={showSubtitles}
                  onCheckedChange={setShowSubtitles}
                />
              </div>
            </Card>
          </div>
        ) : (
          /* S√©lection de th√®me */
          <div className="space-y-6">
            <Card className="p-6 bg-slate-800/30 backdrop-blur-sm border-slate-700">
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-white flex items-center gap-2">
                  <BookOpen className="w-5 h-5" />
                  Choisissez votre univers
                </h3>
                
                <Select value={selectedTheme} onValueChange={setSelectedTheme}>
                  <SelectTrigger className="bg-slate-700 border-slate-600 text-white">
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    {Object.entries(themes).map(([key, theme]) => (
                      <SelectItem key={key} value={key}>
                        <div className="flex items-center gap-2">
                          <span>{theme.icon}</span>
                          <span>{theme.label}</span>
                        </div>
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>

                <Button 
                  onClick={generateStory}
                  disabled={isGenerating}
                  className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
                >
                  {isGenerating ? (
                    <>
                      <Sparkles className="w-5 h-5 mr-2 animate-spin" />
                      Cr√©ation en cours...
                    </>
                  ) : (
                    <>
                      <Sparkles className="w-5 h-5 mr-2" />
                      G√©n√©rer l'histoire
                    </>
                  )}
                </Button>
              </div>
            </Card>

            {/* Aper√ßu du th√®me s√©lectionn√© */}
            <div className="grid md:grid-cols-2 gap-4">
              {Object.entries(themes).map(([key, theme]) => (
                <Card 
                  key={key} 
                  className={`p-6 cursor-pointer transition-all duration-200 ${
                    selectedTheme === key 
                      ? 'bg-slate-700/50 border-blue-500' 
                      : 'bg-slate-800/30 border-slate-700 hover:border-slate-600'
                  }`}
                  onClick={() => setSelectedTheme(key)}
                >
                  <div className="text-center space-y-3">
                    <div className={`w-16 h-16 mx-auto bg-gradient-to-r ${theme.color} rounded-full flex items-center justify-center text-2xl`}>
                      {theme.icon}
                    </div>
                    <div>
                      <h4 className="font-semibold text-white">{theme.label}</h4>
                      <p className="text-sm text-slate-400">{theme.description}</p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>

            {/* Informations */}
            <Card className="p-6 bg-slate-800/30 backdrop-blur-sm border-slate-700">
              <h3 className="font-semibold text-white mb-4">Comment √ßa fonctionne</h3>
              <ul className="text-sm text-slate-300 space-y-2">
                <li>‚Ä¢ Histoires apaisantes de 3 √† 5 minutes</li>
                <li>‚Ä¢ Lecture audio avec sous-titres optionnels</li>
                <li>‚Ä¢ Mode hors ligne disponible (texte uniquement)</li>
                <li>‚Ä¢ Th√®mes vari√©s pour tous les go√ªts</li>
                <li>‚Ä¢ Con√ßues pour favoriser la relaxation</li>
              </ul>
            </Card>
          </div>
        )}
      </div>
    </div>
  );
};

export default StorySynthPage;